process {

     // ------------------------------ Default ------------------------------

    cpus   = { check_max( 2    * task.attempt, 'cpus'   ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'

    // ------------------------------ Process Based ------------------------------

    withLabel:process_single {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_very_low {
        cpus   = { check_max( 1     * task.attempt, 'cpus'    ) }
        memory = { check_max( 1.GB  * task.attempt, 'memory'  ) }
        time   = { check_max( 1.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_low {
        cpus   = { check_max( 4     * task.attempt, 'cpus'    ) }
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 6.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_medium {
        cpus   = { check_max( 8     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_high {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
    }

    // ------------------------------ Time Based ------------------------------
    withLabel:process_long {
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
    }

    // ------------------------------ Memory Based ------------------------------

    withLabel:memory_medium {
        memory = { check_max( 40.GB * task.attempt, 'memory' ) }
    }
    withLabel:memory_high {
        memory = { check_max( 200.GB * task.attempt, 'memory' ) }
    }

    // ------------------------------ Queue Based ------------------------------

    withLabel: data_mover {
          queue = 'datamover'
    }

    // ------------------------------ Error Based ------------------------------

    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 3
    }
    withLabel:error_retry_medium {
        echo = true
        errorStrategy = 'retry'
        maxRetries    = 10
    }
    withLabel:error_retry_max {
        echo = true
        errorStrategy = 'retry'
        maxRetries    = 30
    }
}

params {
    // Defaults only, expecting to be overwritten
    max_memory = 128.GB
    max_cpus = 16
    max_time = 240.h
}